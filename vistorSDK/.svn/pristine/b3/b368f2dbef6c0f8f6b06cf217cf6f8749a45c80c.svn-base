// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "MessageProto.pb.h"
// @@protoc_insertion_point(imports)

@implementation MessageProtoRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [MessageProtoRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface Message ()
@property SInt32 protocol;
@property SInt32 bodyLength;
@property (strong) NSString* packageId;
@property (strong) NSString* body;
@end

@implementation Message

- (BOOL) hasProtocol {
  return !!hasProtocol_;
}
- (void) setHasProtocol:(BOOL) _value_ {
  hasProtocol_ = !!_value_;
}
@synthesize protocol;
- (BOOL) hasBodyLength {
  return !!hasBodyLength_;
}
- (void) setHasBodyLength:(BOOL) _value_ {
  hasBodyLength_ = !!_value_;
}
@synthesize bodyLength;
- (BOOL) hasPackageId {
  return !!hasPackageId_;
}
- (void) setHasPackageId:(BOOL) _value_ {
  hasPackageId_ = !!_value_;
}
@synthesize packageId;
- (BOOL) hasBody {
  return !!hasBody_;
}
- (void) setHasBody:(BOOL) _value_ {
  hasBody_ = !!_value_;
}
@synthesize body;
- (instancetype) init {
  if ((self = [super init])) {
    self.protocol = 0;
    self.bodyLength = 0;
    self.packageId = @"";
    self.body = @"";
  }
  return self;
}
static Message* defaultMessageInstance = nil;
+ (void) initialize {
  if (self == [Message class]) {
    defaultMessageInstance = [[Message alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultMessageInstance;
}
- (instancetype) defaultInstance {
  return defaultMessageInstance;
}
- (BOOL) isInitialized {
  if (!self.hasProtocol) {
    return NO;
  }
  if (!self.hasBodyLength) {
    return NO;
  }
  if (!self.hasPackageId) {
    return NO;
  }
  if (!self.hasBody) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasProtocol) {
    [output writeInt32:1 value:self.protocol];
  }
  if (self.hasBodyLength) {
    [output writeInt32:2 value:self.bodyLength];
  }
  if (self.hasPackageId) {
    [output writeString:3 value:self.packageId];
  }
  if (self.hasBody) {
    [output writeString:4 value:self.body];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasProtocol) {
    size_ += computeInt32Size(1, self.protocol);
  }
  if (self.hasBodyLength) {
    size_ += computeInt32Size(2, self.bodyLength);
  }
  if (self.hasPackageId) {
    size_ += computeStringSize(3, self.packageId);
  }
  if (self.hasBody) {
    size_ += computeStringSize(4, self.body);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (Message*) parseFromData:(NSData*) data {
  return (Message*)[[[Message builder] mergeFromData:data] build];
}
+ (Message*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Message*)[[[Message builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (Message*) parseFromInputStream:(NSInputStream*) input {
  return (Message*)[[[Message builder] mergeFromInputStream:input] build];
}
+ (Message*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Message*)[[[Message builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Message*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (Message*)[[[Message builder] mergeFromCodedInputStream:input] build];
}
+ (Message*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Message*)[[[Message builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MessageBuilder*) builder {
  return [[MessageBuilder alloc] init];
}
+ (MessageBuilder*) builderWithPrototype:(Message*) prototype {
  return [[Message builder] mergeFrom:prototype];
}
- (MessageBuilder*) builder {
  return [Message builder];
}
- (MessageBuilder*) toBuilder {
  return [Message builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasProtocol) {
    [output appendFormat:@"%@%@: %@\n", indent, @"protocol", [NSNumber numberWithInteger:self.protocol]];
  }
  if (self.hasBodyLength) {
    [output appendFormat:@"%@%@: %@\n", indent, @"bodyLength", [NSNumber numberWithInteger:self.bodyLength]];
  }
  if (self.hasPackageId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"packageId", self.packageId];
  }
  if (self.hasBody) {
    [output appendFormat:@"%@%@: %@\n", indent, @"body", self.body];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasProtocol) {
    [dictionary setObject: [NSNumber numberWithInteger:self.protocol] forKey: @"protocol"];
  }
  if (self.hasBodyLength) {
    [dictionary setObject: [NSNumber numberWithInteger:self.bodyLength] forKey: @"bodyLength"];
  }
  if (self.hasPackageId) {
    [dictionary setObject: self.packageId forKey: @"packageId"];
  }
  if (self.hasBody) {
    [dictionary setObject: self.body forKey: @"body"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[Message class]]) {
    return NO;
  }
  Message *otherMessage = other;
  return
      self.hasProtocol == otherMessage.hasProtocol &&
      (!self.hasProtocol || self.protocol == otherMessage.protocol) &&
      self.hasBodyLength == otherMessage.hasBodyLength &&
      (!self.hasBodyLength || self.bodyLength == otherMessage.bodyLength) &&
      self.hasPackageId == otherMessage.hasPackageId &&
      (!self.hasPackageId || [self.packageId isEqual:otherMessage.packageId]) &&
      self.hasBody == otherMessage.hasBody &&
      (!self.hasBody || [self.body isEqual:otherMessage.body]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasProtocol) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.protocol] hash];
  }
  if (self.hasBodyLength) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.bodyLength] hash];
  }
  if (self.hasPackageId) {
    hashCode = hashCode * 31 + [self.packageId hash];
  }
  if (self.hasBody) {
    hashCode = hashCode * 31 + [self.body hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface MessageBuilder()
@property (strong) Message* resultMessage;
@end

@implementation MessageBuilder
@synthesize resultMessage;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultMessage = [[Message alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultMessage;
}
- (MessageBuilder*) clear {
  self.resultMessage = [[Message alloc] init];
  return self;
}
- (MessageBuilder*) clone {
  return [Message builderWithPrototype:resultMessage];
}
- (Message*) defaultInstance {
  return [Message defaultInstance];
}
- (Message*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (Message*) buildPartial {
  Message* returnMe = resultMessage;
  self.resultMessage = nil;
  return returnMe;
}
- (MessageBuilder*) mergeFrom:(Message*) other {
  if (other == [Message defaultInstance]) {
    return self;
  }
  if (other.hasProtocol) {
    [self setProtocol:other.protocol];
  }
  if (other.hasBodyLength) {
    [self setBodyLength:other.bodyLength];
  }
  if (other.hasPackageId) {
    [self setPackageId:other.packageId];
  }
  if (other.hasBody) {
    [self setBody:other.body];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setProtocol:[input readInt32]];
        break;
      }
      case 16: {
        [self setBodyLength:[input readInt32]];
        break;
      }
      case 26: {
        [self setPackageId:[input readString]];
        break;
      }
      case 34: {
        [self setBody:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasProtocol {
  return resultMessage.hasProtocol;
}
- (SInt32) protocol {
  return resultMessage.protocol;
}
- (MessageBuilder*) setProtocol:(SInt32) value {
  resultMessage.hasProtocol = YES;
  resultMessage.protocol = value;
  return self;
}
- (MessageBuilder*) clearProtocol {
  resultMessage.hasProtocol = NO;
  resultMessage.protocol = 0;
  return self;
}
- (BOOL) hasBodyLength {
  return resultMessage.hasBodyLength;
}
- (SInt32) bodyLength {
  return resultMessage.bodyLength;
}
- (MessageBuilder*) setBodyLength:(SInt32) value {
  resultMessage.hasBodyLength = YES;
  resultMessage.bodyLength = value;
  return self;
}
- (MessageBuilder*) clearBodyLength {
  resultMessage.hasBodyLength = NO;
  resultMessage.bodyLength = 0;
  return self;
}
- (BOOL) hasPackageId {
  return resultMessage.hasPackageId;
}
- (NSString*) packageId {
  return resultMessage.packageId;
}
- (MessageBuilder*) setPackageId:(NSString*) value {
  resultMessage.hasPackageId = YES;
  resultMessage.packageId = value;
  return self;
}
- (MessageBuilder*) clearPackageId {
  resultMessage.hasPackageId = NO;
  resultMessage.packageId = @"";
  return self;
}
- (BOOL) hasBody {
  return resultMessage.hasBody;
}
- (NSString*) body {
  return resultMessage.body;
}
- (MessageBuilder*) setBody:(NSString*) value {
  resultMessage.hasBody = YES;
  resultMessage.body = value;
  return self;
}
- (MessageBuilder*) clearBody {
  resultMessage.hasBody = NO;
  resultMessage.body = @"";
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
